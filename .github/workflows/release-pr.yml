name: Release PR
on:
  repository_dispatch:
    types: [release-published]

jobs:
  release-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3

      - name: Cache üì¶
        uses: actions/cache@v3
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Setup Node Environment ‚¨¢
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Update version in package.json
        id: version-bump
        uses: jaywcjlove/github-action-package@v1.3.0
        with:
          path: "./package.json"
          version: ${{ github.event.client_payload.release_version }}

      - run: echo "version - ${{ steps.info.outputs.version }} - ${{ github.event.client_payload.release_version }}"

      - name: Install üîß
        run: npm install

      - name: Build üîß
        run: npm run build

      - name: Commit files from the build
        run: |
          git config --local user.name  ${{ github.actor }}
          git add --all
          git commit -m "Release PR commit for ${{ github.event.client_payload.release_version }}"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: release-pr-${{ github.event.client_payload.release_version }}

      - name: Tag release
        uses: rickstaa/action-create-tag@v1
        with:
          tag: ${{ github.event.client_payload.release_version }}
          message: "Validator Release ${{ github.event.client_payload.release_version }}"

      - uses: actions/github-script@v6
        id: create-release-pr
        name: Create Release PR
        with:
          # use textile.io machine once this file is working
          # github-token: ${{secrets.TEXTILEIO_MACHINE_ACCESS_TOKEN}}
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            try {
              const tag = '${{ github.event.client_payload.release_version }}';
              const releaseBranchName = 'release-pr-' + tag;
              const baseBranch = 'main';
              const prBody = '‚úÖ This PR was created by the Release PR action for version ' + tag;

              // Create a pull request
              await github.rest.pulls.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: 'Release PR ' + tag,
                head: releaseBranchName,
                base: baseBranch,
                body: prBody
              });
            } catch (err) {
              console.log(err);
              core.setFailed('Failed to create release branch: ' + err.message);
              return;
            }
